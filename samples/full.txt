/*
    This file is an example of the unilang syntax.
    This multi-line comment is allowed in unilang files.
    // Test
*/

print "Hello" // >> "Hello"
printl ", World!" // >> "Hello, World!\n"
println "Hello, World!" // >> "Hello, World!\n" // Same as "printl "Hello, World!"
printl "This is a more complicated string with nested '\"' characters in it '\"'."
printl 'This is another way to use strings with non escaped double quotes (") in it.'
printl "You can concatenate strings" + " using the + operator" + ", it's easy..."
printl "You can print any positive integer: " + 42
printl "As well as any other expr: " + - 42 - 64 + 128


list = []
list = [0, 1, 2.4, 3]
list = [0..3] // list = [0, 1, 2, 3]
list = [3..0] // list = [3, 2, 1, 0]
list = [0..3, 4, 7, 3..0, 2] // list = [0, 1, 2, 3, 4, 7, 3, 2, 1, 0, 2]
list = list + [0, 1, 0..2] // list = [0, 1, 2, 3, 4, 7, 3, 2, 1, 0, 2, 0, 1, 0, 1, 2]
list = list - [0..2] // list = [3, 4, 7, 3]
list = list * 2 // list = [3, 4, 7, 3, 3, 4, 7, 3]
list += [0, 1, 0..2] // list = [3, 4, 7, 3, 0, 1, 0, 1, 2]
list += [0, 1, 2] + [0, 2] // list = [3, 4, 7, 3, 0, 1, 0, 1, 2, 0, 1, 2, 0, 2]
list -= [1..3, 7] // list = [4, 0, 0, 0, 0]
list -= [1..4] - [4] + [0] // list = [4, 0, 0, 0, 0] - ([1, 2, 3, 4] - [4] + [0]) = [4, 0, 0, 0, 0] - [1, 2, 3, 0] = [4]
list *= 3 // list = [4, 4, 4]
list += [0..2] * 2 // list = [4, 4, 4, 0, 1, 2, 0, 1, 2]
list = [list[5], list[0], 2..4] // list = [2, 4, 2, 3, 4]
list = list[1..3] // list = [4, 2, 3]
list = [0, 1, 2, 3, 4, 0, 2, 1, 3, 0, 4, 0, -3, 0, 2]! // list = [0, 1, 2, 3, 4, -3] // removes duplicate values
list = (list * 3)! // list = [0, 1, 2, 3, 4, -3, 0, 1, 2, 3, 4, -3, 0, 1, 2, 3, 4, -3]! = [0, 1, 2, 3, 4, -3]
list = [0, 1, 2, 3, 0, 1, 1, 2, 3, 4]![1..4] // list = [0, 0, 4] // removes duplicate values between 1 and 4 (note that 4 has no duplicate in the list)
list = [0, 1, 2, 42, 3, 4, 5] <- 4 // list = [3, 4, 5, 0, 1, 2, 42] // shifts elements in the list 4 times to the left
list = [0, 1, 2, 42, 3, 4, 5] -> 2 // list = [4, 5, 0, 1, 2, 42, 3] // shifts elements in the list 2 times to the right
list = [0, 1, 2, 42, 3, 4, 5] <-> // list = [5, 4, 3, 42, 2, 1, 0] // reverses the list
list = list<~> // shuffles the list
list = [|list|..0, 4, 5] // list = [7..0, 4, 5] = [7, 6, 5, 4, 3, 2, 1, 0, 4, 5] // |list| gives the size of the list
list = [0, 1, 2, 3] * [3..0] // list = [0, 1, 2, 3] * [3, 2, 1, 0] = [(0, 3), ..., (0, 0), (1, 3), ..., (1, 0), (2, 3), ..., (2, 0), (3, 3), ..., (3, 0)] // computes the cartesian product
list = [(a, b) in list | a <= 1 && b > 2] // list = [(0, 3), (1, 3)]

list[4] = list[1][1] * list[0][0] // list = [(0, 3), (1, 3), null, null, 3 * 0] = [(0, 3), (1, 3), null, null, 0]

set = {0, 1, 2, 3, 2, 1, 0, 4} // set = {0, 1, 2, 3, 4}
set = {0, 1, 2, 3} | {0..5, 6, 3} & {2..4} // set = {0, 1, 2, 3, 4, 5, 6} & {2..8} = [2, 3, 4, 5, 6] // computes the union (|) and the intersection (&) between two sets

list = [0, 0, 4]

